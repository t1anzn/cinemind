---
/**
 * Homepage
 *
 * Main landing page showcasing featured movies and popular collections.
 * Features:
 * - Server-side data fetching from Flask API endpoints (/featured, /popular, /explore)
 * - Hero section with FeaturedSlider displaying top 3 movies with trailers
 * - Multiple MovieGrid sections with curated content
 * - Client-side hydration for interactive components
 * - Responsive layout with content wrapper
 * - Error handling with fallback empty arrays
 *
 * Used as the main entry point and discovery page for the application.
 */

import Layout from "../layouts/Layout.astro";
import FeaturedSlider from "../components/FeaturedSlider";
import MovieGrid from "../components/MovieGrid";

// Fetch featured movies from the backend
const featuredMoviesResponse = await fetch("http://127.0.0.1:5000/featured");
const featuredMoviesData = await featuredMoviesResponse.json();
const featuredMovies = featuredMoviesData || [];
// console.log("Fetched featured movies", featuredMovies);

// Fetch popular movies from the backend
const popularMoviesResponse = await fetch("http://127.0.0.1:5000/popular");
const popularMoviesData = await popularMoviesResponse.json();
const popularMovies = popularMoviesData || [];
//console.log("Fetched popular movies", popularMovies);

// Fetch randomised explore movies from the backend
const exploreMoviesResponse = await fetch("http://127.0.0.1:5000/explore");
const exploreMoviesData = await exploreMoviesResponse.json();
const exploreMovies = exploreMoviesData || [];
//console.log("Fetched explore movies", exploreMovies);
---

<Layout title="CineMind">
  <FeaturedSlider client:load featuredMovies={featuredMovies} />

  <div class="content-wrapper py-10">
    <MovieGrid
      client:visible
      title="Popular Movies"
      tagline="Top rated films loved by our community"
      movies={popularMovies}
    />
    <MovieGrid
      client:visible
      title="Explore"
      tagline="Find your next favorite movie"
      movies={exploreMovies}
    />
  </div>
</Layout>
